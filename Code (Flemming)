rm(list=ls())
library("readr")
library("dplyr")
library("stringr")
library("NLP")
library("tm")

df.small = read_csv("C:/Users/Dose/Google Drev/Polit/SDS/airbnb/listings1.csv")
df.det = read_csv("C:/Users/Dose/Google Drev/Polit/SDS/airbnb/listings.csv")
df.cal = read_csv("C:/Users/Dose/Google Drev/Polit/SDS/airbnb/calendar.csv")
df.rev = read_csv("C:/Users/Dose/Google Drev/Polit/SDS/airbnb/reviews.csv")

##Loading data
overview.data <-   cbind(df.det$id, df.det$neighborhood_overview, df.det$neighbourhood_cleansed)
df.overview <- data.frame(overview.data)
df.overview <- data.frame("id" = df.overview$X1, "overview" = df.overview$X2, "neighbourhood" = df.overview$X3)
df.overview <- df.overview %>%
 mutate("overview" = as.character(overview))
df.overview <- na.omit(df.overview)

## CREATE A PRICE HISTOGRAM
#Prices as numeric
View(df.det)
df.det$det <- sub('\\$','',as.character(df.det$price))
df.det$price <-sub("\\,", "", df.det$price)
df.det$price <- as.numeric(df.det$price)
summary(df.det$price)
# Histogram
id
hist(df.det$price, 
     main="Prices", 
     xlab="Price", 
     border="blue", 
     col="blue",
     xlim=c(0,2500), ylim = c(0,2000),
     las=1, 
     breaks=800)

## Summary 
plot(table(df.overview$neighbourhood))
n.neighbourhood <- data.frame(table(df.overview$neighbourhood))
n.neighbourhood


##Preps


r <- with(df.overview, which (neighbourhood=="Vanlse" | 
                                neighbourhood == "Valby" | 
                                neighbourhood == "Brnshj-Husum" |
                                neighbourhood == "Bispebjerg" |
                                neighbourhood == "Amager Vest" |
                                , arr.ind=TRUE)) 

df.overview <- df.overview[-r, ]

library(stringr)
df.overview.1 <- df.overview %>%
  mutate(overview = cbind(strsplit(df.overview$overview, " ")))


## lower case letters
df.overview.1$overview = lapply(df.overview.1$overview, 
                          FUN=tolower)
##removing unique copenhagen characteristics
replacement.vector <- c("copenh", "vej", "gade", "fælled", "assistens", 
                        "bro", "indre", "by", "christianshavn", "amager",
                        "frederiksberg", "islands", "brygge", "neighborhood",
                        "neighbourhood", "neighbourhod", "absalon", "havn", 
                        "meatpack", "district", "christiania", "latiner", "bjerg",
                        "mermaid", "torveha", "svanemøl", "king")

for(i in 1:length(replacement.vector)){
  df.overview.1$overview = lapply(df.overview.1$overview,
                                 FUN=function(x)
                                 grep(replacement.vector[i],x,invert = TRUE, value = TRUE))
}
## Cleaning
df.overview.1$overview = lapply(df.overview.1$overview, 
                          FUN=function(x) 
                            gsub("-", "_", x))
df.overview.1$overview = lapply(df.overview.1$overview, 
                              FUN=function(x) 
                                gsub("[[:punct:]]", "", x))
df.overview.1$overview = lapply(df.overview.1$overview, 
                                FUN=function(x) 
                                  gsub("\\d", "", x))
#df.overview <- df.overview %>%
  #mutate(neighbourhood = as.character(df.overview$neighbourhood))

##Corpus (?) and more cleaning
library("tm")
combi_overview = c(Corpus(VectorSource(df.overview.1$overview)))
combi_overview = tm_map(combi_overview, stemDocument,
                           language ="english")
combi_overview = tm_map(combi_overview, stemDocument,
                       language ="danish")
combi_overview = tm_map(combi_overview, removeWords, stopwords(
                        kind ="english"))
combi_overview = tm_map(combi_overview, removeWords, stopwords(
                        kind ="danish"))
combi_overviewDTM = DocumentTermMatrix(combi_overview)
combi_overviewDTM = removeSparseTerms(combi_overviewDTM, 0.99)
combi_overviewDTM = as.data.frame(
  as.matrix(combi_overviewDTM))
  
##Adding Neighbourhood column at the end
df.overview.1$neighbourhood <- as.character(df.overview.1$neighbourhood)
class(df.overview.1$neighbourhood)

new_neighbourhood <- c(df.overview.1$neighbourhood)

combi_overviewDTM <- data.frame(cbind(combi_overviewDTM, "neighbourhood"=new_neighbourhood))

## Splitting the data
split <- floor(0.75 * nrow(combi_overviewDTM))
set.seed(1)
train_ind <- sample(seq_len(nrow(combi_overviewDTM)), size = split)

trainDTM  = combi_overviewDTM[train_ind, ]
testDTM = combi_overviewDTM[-train_ind, ]

length(trainDTM)
length(testDTM)


## Running the model
trainDTM  = combi_overviewDTM[1:nrow(df.overview.1), ]
testDTM = combi_overviewDTM[-(1:nrow(df.overview.1)), ]
trainDTM$neighbourhood
testDTM$neighbourhood


library("rpart")
set.seed(1)
model = rpart(neighbourhood ~ ., data = trainDTM, 
              method = "class")
neighbourhood = predict(model, newdata = testDTM, 
                  type = "class")


library(rpart.plot)
prp(model)

############## CHECK ACCURACY ACCURACY ###############
neighbourhood
View(data.frame(neighbourhood))

nrow(testDTM)
results <- data.frame("prediction"=neighbourhood)
View(results)
rnames <- as.numeric(rownames(results))
reality <- df.overview.1$neighbourhood[rnames]

comparison <- data.frame(cbind("reality"=reality, "prediction"=results))
View(comparison)

comparison <- comparison %>%
  mutate(check=ifelse(prediction==reality, "1", "0"))

comparison$check <- as.numeric(comparison$check)
class(comparison$check)

table(comparison$check)

comparison.summary <- comparison %>%
  group_by(reality) %>%
  summarise(mean(check))
View(comparison.summary)
